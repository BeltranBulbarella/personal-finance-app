// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  name         String
  surname      String
  email        String        @unique
  password     String
  cashBalance  Float         @default(0)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  Transactions Transaction[]
  Holdings     Holding[]
}

model Asset {
  id           Int           @id @default(autoincrement())
  type         String // 'stock' or 'crypto'
  symbol       String        @unique
  name         String
  Transactions Transaction[]
  Holdings     Holding[]
}

model Transaction {
  id              Int      @id @default(autoincrement())
  userId          Int
  assetId         Int?
  quantity        Float?
  pricePerUnit    Float
  moneySpent      Float? // Optional field to store the money spent
  transactionType String // 'buy', 'sell', or 'cash'
  transactionDate DateTime
  user            User     @relation(fields: [userId], references: [id])
  asset           Asset?   @relation(fields: [assetId], references: [id], onDelete: SetNull)
}

model Holding {
  id              Int    @id @default(autoincrement())
  userId          Int
  assetId         Int
  quantity        Float?
  moneySpent      Float?
  averageBuyPrice Float  @default(0)
  user            User   @relation(fields: [userId], references: [id])
  asset           Asset  @relation(fields: [assetId], references: [id])
}
